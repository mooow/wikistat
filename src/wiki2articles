#!/usr/bin/env python3

# Copyright (c) 2017 Lorenzo Mureu
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

'''
Takes a (single, concatenated) wikiextractor file.
Puts each Page in a single file named as its title.
Can be improved.
'''

import re, sys, os

def norm(string):
    from string import punctuation
    trans = str.maketrans(punctuation, len(punctuation)*"_")
    return string.translate(trans)


if len(sys.argv) != 3:
    print("Syntax: {} <input_file> <output_directory>".format(sys.argv[0]), file=sys.stderr)
    exit(1)

input_file = sys.argv[1]
output_directory = sys.argv[2]

with open(input_file, 'r') as ifp:
    out = None
    i = 0
    print(i)
    for line in ifp.readlines():
        match = re.match('^<doc.*title="(.+)">\n', line)
        if match:
            title = match.group(1)

            i += 1
            print('\r'+i, flush=True, end='')

            title = norm(title)
            filename = os.path.join(output_directory, title[0:2], title)+"bz2"

            if os.path.exists():
                out = None
                continue
            out = bz2.open(filename, "w", compresslevel=9)
            continue

        if re.match('</doc>', line):
            out.close()
            continue

        if out:
            out.write(line)
